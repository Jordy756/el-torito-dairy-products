---
type Props = {
    index: number;
    title: string;
    value: string;
    totalAwards: number;
};

const { index, title, value, totalAwards } = Astro.props;
---

<article>
    <p>{title}</p>
    <div>
        <p>{value}</p>
    </div>
</article>

<style define:vars={{ index, totalAwards }}>
    article {
        --award-card-width: min(100%, 270px);
        width: var(--award-card-width);
        height: 170px;
        padding: 1rem;
        border-radius: var(--border-radius-out);
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: var(--glass-color);
        color: var(--neutral-50);
        backdrop-filter: var(--blur-effect);
    }

    article > div {
        flex: 1;
        display: grid;
        place-items: center;
    }

    article > div > p {
        text-align: center;
        font-size: clamp(1.802rem, 4vw + 1rem, 3.052rem);
    }

    @media screen and (width <= 905px) {
        article {
            --animation-duration: 25s;
            position: absolute;
            top: 0;
            left: calc(var(--award-card-width) * var(--totalAwards));
            animation: moveAwardToLeft var(--animation-duration) linear infinite;
            animation-delay: calc(
                var(--animation-duration) / var(--totalAwards) * (var(--totalAwards) - var(--index)) * -1
            );
        }

        @keyframes moveAwardToLeft {
            to {
                left: calc(-1 * var(--award-card-width));
            }
        }
    }

    @media screen and (width <= 480px) {
        article {
            height: 160px;
        }
    }
</style>
